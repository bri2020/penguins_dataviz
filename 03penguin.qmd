---
title: "Exploring the Simpson's Paradox Within the Penguin Dataset"
title-block-banner: "#f0f3f5"
title-block-banner-color: "black"
subtitle: "Nice things"
description: "I learn new quatro things..."
author: 
  name: "me"
  affiliation: "University"
  email: me.me@gmail.com

keywords: "Quarto, Paradox, Data Analysis"
date: today

format:
  html:
    code-fold: true
    code-summary: "Show the code"
    toc: true
    toc-location: left
    toc-title: " "
    number-sections: true
    editor: source
    fig-cap-location: margin
    css: style.css
    embed-resources: true
include-after-body: "footer.html"

---


::: {.callout-caution collapse="true"}

## A few consideration about this doc

This Quarto document serves as a practical illustration of the concepts covered in the productive workflow online course. It's designed primarily for _educational purposes_, so the focus is on demonstrating Quarto techniques rather than on the rigor of its scientific content.

:::

## Introduction

This document offers a straightforward analysis of the well-known penguin dataset. It is designed to complement the [Productive R Workflow](https://www.productive-r-workflow.com) online course.

You can read more about the penguin dataset [here](https://allisonhorst.github.io/palmerpenguins/).

Let's load libraries before we start!

```{r, message=F, warning=F}

# load the tidyverse

library(tidyverse)

library(hrbrthemes) # ipsum theme for ggplot2 charts

library(patchwork) # combine charts together

library(DT) # interactive tables

library(knitr) # static table with the kable() function

library(plotly) # interactive graphs
library(htmltools)


# Define the custom ggplot theme
my_theme <- function() {
  theme_ipsum() +
    theme(
      plot.title = element_text(color = "#69b3a2", size = 18, face = "bold"),
      axis.text.x = element_text(size = 7),
      axis.text.y = element_text(size = 7)
    )
}


```

## Loading data

The dataset has already been loaded and cleaned in the previous step of this pipeline.

Let's load the clean version, together with a few functions available in `functions.R`.

```{r}

# Source functions

source(file="functions/functions.R")

# Read the clean dataset

data <- readRDS(file = "input/clean_data.rds")

```

Note that `bill_length_mm` and `bill_depth_mm` have the following signification.

![Bill measurement explanation](asset/palmerpenguins.png){width=300}

In case you're wondering how the original dataset looks like, here is a searchable version of it, made using the `DT` package:

```{r}



DT::datatable(
  data, 
  options = list(pageLength = 3), 
  filter = "top",
  class = 'cell-border stripe hover compact',
  caption = htmltools::tags$caption(
    style = 'caption-side: bottom; text-align: center;',
    'Table 1: ', em('Penguin stuff')
  )
)

data <- data %>%
  mutate(
    bill_depth_mm = as.numeric(bill_depth_mm) # Convert to numeric
  )

```

## Bill Length and Bill Depth

Now, let's make some descriptive analysis, including <b>summary statistics</b> and <b>graphs</b>.

What's striking is the <b>slightly negative relationship</b> between `bill length` and `bill depth`. One could definitely expect the opposite.

```{r, fig.align = "center", fig.width=5, fig.height=5, warning=FALSE, fig.cap="Relationship between bill <b>length</b> and bill <b>depth</b>. <b>All</b> data points included."}

p <- data %>%

ggplot(

aes(x = bill_length_mm, y = bill_depth_mm)

) +

geom_point(color="#69b3a2") +

labs(

x = "Bill Length (mm)",

y = "Bill Depth (mm)",

title = paste("Surprising relationship?")

) +

my_theme()

ggplotly(p)

```
------------------------------------------------------

It is also interesting to note that `bill length` a and `bill depth` are quite different from one specie to another. The average of a variable can be computed as follow:

$${displaystyle Avg={frac {1}{n}}sum _{i=1}^{n}a_{i}={frac {a_{1}+a_{2}+cdots +a_{n}}{n}}}$$

`bill length` and `bill depth` averages are summarized in the 2 tables below.

```{r}

#| layout-ncol: 2

# Calculate the average bill length per species
bill_length_per_specie <- data %>%
  group_by(species) %>%
  summarise(
    average_bill_length = mean(bill_length_mm, na.rm = TRUE)
  )
#bill_length_per_specie
# Display the bill length table
kable(bill_length_per_specie)

# Calculate the average bill depth per species


bill_depth_per_specie <- data %>%
  group_by(species) %>%
  summarise(
    average_bill_depth = mean(bill_depth_mm, na.rm = TRUE)
  )
#bill_depth_per_specie
# Display the bill depth table
kable(bill_depth_per_specie)

# Extract and round the average bill length for the Adelie species
bill_length_adelie <- bill_length_per_specie %>%
  filter(species == "Adelie") %>%
  pull(average_bill_length) %>%
  round(2)


```

For instance, the average bill length for the specie `Adelie` is `r bill_length_adelie`.

Now, let's check the relationship between bill depth and bill length for the specie `Adelie` on the island `Torgersen`:

```{r, warning=FALSE, fig.height=3, fig.width=9, fig.cap="There is actually a positive correlation when split by species."}

# Use the function in functions.R

p1 <- create_scatterplot(data, "Adelie", "#6689c6")
p1=p1+my_theme() 

p2 <- create_scatterplot(data, "Chinstrap", "#e85252")
p2=p2+my_theme() 
p3 <- create_scatterplot(data, "Gentoo", "#9a6fb0")
p3=p3+my_theme() 

p1 + p2 + p3
```
